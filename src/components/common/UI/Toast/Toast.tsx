import React from "react";
import ReactDOM from "react-dom";
import { useSelector } from "react-redux";

import { ToastContainer, toast } from "react-toast";

import { RootState } from "../../../../store/store";

import { ToastBox } from "./Toast.styled";

import { colors } from "../../../../styles/colorPalette";

const Toast = (): React.ReactElement => {
  const { isAuthorizingSucceed, isAuthorizingFailed } = useSelector((state: RootState) => state.authReducer);

  const { isStudentsActionSucceed, isStudentsActionFailed } = useSelector((state: RootState) => state.studentsEditorReducer);

  const token = JSON.parse(localStorage.getItem("profile") || "{}").token;

  const portalContainer = document.getElementById("toast-root") as HTMLElement;

  const showSuccess = (text: string) =>
    toast(text, {
      backgroundColor: `${colors.primary}`,
      color: `${colors.success}`,
    });
  const showError = (text: string) =>
    toast(text, {
      backgroundColor: `${colors.primary}`,
      color: `${colors.fail}`,
    });

  React.useEffect(() => {
    if (isAuthorizingSucceed) {
      showSuccess("–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç.üòÉ");
    }

    if (isAuthorizingFailed) {
      showError("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. üò• –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }

    if (isStudentsActionSucceed && token) {
      showSuccess("–î–∞–Ω–Ω—ã–µ —É–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.üòÉ");
    }

    if (isStudentsActionFailed && token) {
      showError("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. üôÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  }, [isAuthorizingFailed, isAuthorizingSucceed, isStudentsActionFailed, isStudentsActionSucceed, token]);

  return ReactDOM.createPortal(
    <ToastBox>
      <ToastContainer position="bottom-center" delay={3000} />
    </ToastBox>,
    portalContainer
  );
};

export default Toast;
